<?xml version="1.0" encoding="utf-8"?>
    <!-- LinearLayoutCompat其实就是LinerLayout组件,只是为了兼容低版本-->
<androidx.appcompat.widget.LinearLayoutCompat xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="horizontal"
    tools:context=".MainActivity">
    <!--第二种-->
    <Button
        android:id="@+id/button_0"
        android:layout_weight="1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/blue"
        />

    <Button
        android:id="@+id/button_1"
        android:layout_weight="2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/red"
        />

    <Button
        android:id="@+id/button_2"
        android:layout_weight="3"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/yellow"
        />

</androidx.appcompat.widget.LinearLayoutCompat>
    <!--
        设屏幕宽度为L，在三个view的宽度都为match_parent的情况下，原有宽度为L，三个的View的宽度都为L，剩余宽度为L-（L+L+L） = -2L
        三个TextView的宽度依次为：
        L+(-2L)*1/6 = (2/3)L
        L+(-2L)*2/6 = (1/3)L
        L+(-2L)*3/6 = (0)L
        这就是为什么layout_weight设置越大显示的占比反而越小，甚至是不显示的原因
        事实上默认的View的weight这个值为0，一旦设置了这个值，那么所在view在绘制的时候执行onMeasure两次的原因就在这。
    -->